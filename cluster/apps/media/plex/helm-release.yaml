---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: plex
  namespace: media
spec:
  interval: 5m
  chart:
    spec:
      # renovate: registryUrl=https://k8s-at-home.com/charts/
      chart: plex
      version: 6.1.0
      sourceRef:
        kind: HelmRepository
        name: k8s-at-home-charts
        namespace: flux-system
      interval: 5m
  values:
    image:
      repository: plexinc/pms-docker
      tag: 1.25.1.5286-34f965be8
      pullPolicy: IfNotPresent

    env:
      TZ: "America/Denver"
      ALLOWED_NETWORKS: 10.0.0.0/255.255.255.0
      PLEX_CLAIM: claim-zUasSSXJF3HUAsUFCAks
      # PLEX_PREFERENCE_1: "FriendlyName=KingPlex"

  # service:
  #   main:
  #     type: NodePort
  #     ports:
  #       http:
  #         port: 32400
  #         targetPort: 32400
  #         nodePort: 30008
    # dnla-tcp:
    #   enabled: true
    #   type: NodePort
    #   ports:
    #     dnla-tcp:
    #       enabled: true
    #       port: 32469
    #       protocol: TCP
    #       targetPort: 32469
    #       nodePort: 30007
    #   externalTrafficPolicy: Local
    # dnla-udp:
    #   enabled: true
    #   type: NodePort
    #   ports:
    #     dnla-udp:
    #       enabled: true
    #       port: 1900
    #       protocol: TCP
    #       targetPort: 1900
    #   externalTrafficPolicy: Local

    # service:
    #   main:
    #     type: NodePort
    #     ports:
    #       port: "32400"
    #       targetPort: "32400"
    #       nodePort: 30008
#         annotations:
#           traefik.ingress.kubernetes.io/service.serversscheme: https
#         loadBalancerIP: ${METALLB_PLEX_ADDR}
#         externalTrafficPolicy: Local
    service:
      main:
        type: NodePort
          ports:
            https:
              - port: 32400
                enabled: true
                targetPort: 32400
                nodePort: 30009

    ingress:
      main:
        enabled: false
        ingressClassName: "traefik"
        annotations:
          cert-manager.io/cluster-issuer: letsencrypt-production
          external-dns/is-public: "true"
          external-dns.alpha.kubernetes.io/target: ipv4.${SECRET_DOMAIN}
          external-dns.alpha.kubernetes.io/cloudflare-proxied: "true"
          traefik.ingress.kubernetes.io/router.entrypoints: websecure
          hajimari.io/appName: "Plex"
          hajimari.io/enable: "true"
          hajimari.io/icon: "plex"

        hosts:
          - host: plex.${SECRET_DOMAIN}
            paths:
              - path: /
                pathType: Prefix
        tls:
          - secretName: tls.plex
            hosts:
              - plex.${SECRET_DOMAIN}

    # ingress:
    #   main:
    #     enabled: true
    #     ingressClassName: "traefik"
    #     annotations: 
    #       kubernetes.io/ingress.class: traefik 
    #       external-dns.alpha.kubernetes.io/target: "ipv4.${SECRET_DOMAIN}"
    #       external-dns/is-public: "true"
    #       cert-manager.io/cluster-issuer: "letsencrypt-production"
    #       traefik.ingress.kubernetes.io/router.entrypoints: "websecure"
    #       hajimari.io/appName: "Plex"
    #       hajimari.io/enable: "true"
    #       hajimari.io/icon: "plex"
    #     hosts:
    #       - host: plex.${SECRET_DOMAIN}
    #         paths:
    #           - path: /
    #             pathType: Prefix
    #     tls:
    #       - hosts:
    #           - "plex.${SECRET_DOMAIN}"
    #         secretName: plex-tls

    persistence:
      data:
        enabled: true
        existingClaim: "plex-media"
      config:
        enabled: true
        existingClaim: "plex-config"

    # affinity:
    #   nodeAffinity:
    #     requiredDuringSchedulingIgnoredDuringExecution:
    #       nodeSelectorTerms:
    #       - matchExpressions:
    #         - key: kubernetes.io/arch
    #           operator: In
    #           values:
    #           - amd64
    #     preferredDuringSchedulingIgnoredDuringExecution:
    #     - weight: 1
    #       preference:
    #         matchExpressions:
    #           - key: kubernetes.io/hostname
    #             operator: In
    #             values:
    #             - k8s-1
    #             - k8s-2
